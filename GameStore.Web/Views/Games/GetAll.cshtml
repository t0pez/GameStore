@model GameStore.Web.ViewModels.Games.GamesGetAllViewModel

@{
    ViewBag.Title = "Index";
    Layout = "_Layout";
}

<h2 class="mt-3">Games</h2>

<div class="row">
    <div class="col-4">
        @{
            await Html.RenderPartialAsync("GetAllFilterPartialView", Model.Filter);
        }
    </div>

    <div class="col-8">
        <table class="table">
            <tr>
                <th>
                    <span class="fw-bolder">Name</span>
                </th>
                <th>
                    <span class="fw-bolder">Price</span>
                </th>
                <th></th>
            </tr>

            @foreach (var game in Model.GamesPaged.Result)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => game.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => game.Price)
                    </td>
                    <td>
                        @Html.ActionLink("Checkout", "GetWithDetails", new { gameKey = game.Key })
                    </td>
                </tr>
            }
        </table>

        <div>
            <label>Page size: </label>
            <button class="btn" onclick="setNewPageSize('10')">10</button>
            <button class="btn" onclick="setNewPageSize('20')">20</button>
            <button class="btn" onclick="setNewPageSize('50')">50</button>
            <button class="btn" onclick="setNewPageSize('100')">100</button>
            <button class="btn" onclick="setNewPageSize('0')">All</button>
        </div>

        <div>
            <a class="btn @(Model.GamesPaged.HasPreviousPage ? "" : "disabled")" onclick="previousPage()">Previous</a>

            <a class="btn @(Model.GamesPaged.HasNextPage ? "" : "disabled")" onclick="nextPage()">Next</a>
        </div>
    </div>

</div>