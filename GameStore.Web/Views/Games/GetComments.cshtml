@using GameStore.Web.ViewModels.Comments
@using Microsoft.AspNetCore.Routing
@using GameStore.Web.Models.Comment
@using GameStore.Core.Models.Comments
@model ICollection<CommentViewModel>

@{
    ViewBag.Title = "Comments";
    Layout = "_Layout";
}

<h2 class="mt-5">Comments</h2>

@functions
{
    void RenderComment(CommentViewModel comment)
    {
        <div class="media-block">
            <p class="media-left">©</p>
            <div class="media-body">
                <div class="mb-2">
                    <a href="#" class="btn-link text-decoration-none media-heading box-inline">@comment.AuthorName</a>
                    <p class="text-muted text-sm">@comment.DateOfCreation</p>
                </div>
                <p>@{ RenderCommentReplyState(comment); } @{ RenderBody(comment);}</p>
                <div class="row ps-1">
                    <div class="col-4">
                        <button type="button" class="btn btn-sm btn-default btn-hover-primary" onclick="addCommentReply('@comment.AuthorName', '@comment.Id')">Reply</button>
                        <button type="button" class="btn btn-sm btn-default btn-hover-primary" onclick="addCommentQuote('@comment.AuthorName', '@comment.Id')">Quote</button>
                    </div>
                    <div class="col-4"></div>
                    <div class="col-4">
                        <button type="button" class="btn btn-sm btn-default btn-hover-primary"
                                data-bs-toggle="modal" data-bs-target="#editModal"
                                data-id="@comment.Id" data-author-name="@comment.AuthorName" data-body="@comment.Body">
                            Edit
                        </button>
                        <button type="button" class="btn btn-sm btn-default btn-hover-primary"
                                data-bs-toggle="modal" data-bs-target="#deleteModal"
                                data-id="@comment.Id">
                            Delete
                        </button>
                        <button type="button" class="btn btn-sm btn-default btn-hover-primary"
                                data-bs-toggle="modal" data-bs-target="#banModal">
                            Ban
                        </button>
                    </div>
                </div>
                <hr>
                @{ RenderReplies(comment); }
            </div>
        </div>
    }

    void RenderCommentReplyState(CommentViewModel comment)
    {
        if (comment.State == CommentState.Reply)
        {
            RenderCommentReply(comment);
        }
        if (comment.State == CommentState.Quote)
        {
            RenderCommentQuote(comment);
        }
    }

    void RenderCommentReply(CommentViewModel comment)
    {
        <span class="fw-bolder">@comment.Parent.AuthorName,</span>
    }
    
    void RenderCommentQuote(CommentViewModel comment)
    {
        var quoteText = comment.Parent.MessageIsDeleted == false ? comment.Parent.Body : "Comment was deleted";

        <span class="fw-bolder">@comment.Parent.AuthorName</span>
        <q class="fst-italic">@quoteText</q>
        <span>,</span>
    }

    void RenderBody(CommentViewModel comment)
    {
        var body = comment.MessageIsDeleted == false ? comment.Body : "Comment was deleted";
        <span>@body</span>
    }
    
    void RenderReplies(CommentViewModel parentComment)
    {
        foreach (var reply in parentComment.Replies)
        {
            RenderComment(reply);
        }
    }
}

<div>
    <div class="panel">
        <div class="panel-body">
            @if (Model.Count > 0)
            {
                foreach (var comment in Model)
                {
                    RenderComment(comment);
                }
            }
        </div>
    </div>
    
    <div>
        @{
            var requestModel = new CommentCreateRequestModel();
            
            var routeData = Context.GetRouteData();
            var gameKey = routeData.Values["gameKey"].ToString();
        }
        
        <form method="post" asp-action="CreateComment" asp-route-gameKey="@gameKey">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            
            <div>
                <h4 class="mb-3">Leave your comment</h4>

                <div id="StateSection" class="row mb-2" hidden="hidden">
                    <input type="hidden" id="State" name="State" value="0"/>
                    <input type="hidden" id="ParentId" name="ParentId" value=""/>
                    <div class="col-8 align-items-center">
                        <p id="StateSectionText" class="mt-3"></p>
                    </div>
                    <button class="btn btn-danger col-4 my-2" type="button" onclick="removeCommentReplyingStatus()">Cancel</button>
                </div>
                
                <div class="row">
                    <div class="form-floating mb-3 col-4">
                        <input class="form-control form-control-lg" placeholder="Author"
                               id="AuthorName" name="AuthorName" type="text" required/>

                        <label class="ps-4" for="AuthorName">Your name:</label>

                        @Html.ValidationMessage(nameof(requestModel.AuthorName), "", new { @class = "text-danger" })
                    </div>

                    <div class="form-floating mb-3 col-8">
                        <textarea class="form-control" style="min-width: 100%" placeholder="Author"
                               id="Message" name="Message" type="text" required></textarea>

                        <label class="ps-4" for="Message">Review:</label>

                        @Html.ValidationMessage(nameof(requestModel.Message), "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="mb-3">
                    <input type="submit" class="btn btn-primary" content="Leave comment"/>
                </div>

            </div>
        </form>
    </div>
    
    <div class="modal fade" id="editModal" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form method="post" asp-controller="Games" asp-action="UpdateComment" asp-route-gameKey="@gameKey">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editModalLabel">Edit message</h5>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" id="edit-id" name="Id"/>
                        <div class="form-group">
                            <label for="edit-author-name" class="col-form-label">Author name:</label>
                            <input type="text" class="form-control" id="edit-author-name" name="AuthorName">
                        </div>
                        <div class="form-group">
                            <label for="edit-body" class="col-form-label">Message:</label>
                            <textarea class="form-control" id="edit-body" name="Body"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Edit message</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    
    <div class="modal fade" id="deleteModal" role="dialog">
        <div class="modal-dialog modal-sm">
            <div class="modal-content">
                <form method="post" asp-controller="Games" asp-action="DeleteComment" asp-route-gameKey="@gameKey">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalLabel">Delete message</h5>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" id="delete-id" name="id"/>
                        <p>Are you sure you want to delete this message?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Delete message</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    
    <div class="modal fade" id="banModal" role="dialog">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form method="post" asp-controller="Games" asp-action="DeleteComment" asp-route-gameKey="@gameKey">
                    <div class="modal-header">
                        <h5 class="modal-title" id="banModalLabel">Ban user</h5>
                    </div>
                    <div class="modal-body">
                        <input type="hidden" id="ban-id" name="id"/>
                        <p>Are you sure you want to ban this user?</p>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="" class="btn btn-primary">1 hour</button>
                        <button type="" class="btn btn-primary">1 day</button>
                        <button type="" class="btn btn-primary">1 week</button>
                        <button type="" class="btn btn-primary">1 month</button>
                        <button type="" class="btn btn-primary">Permanent</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    
    <script>
    let editModal = document.getElementById('editModal')
    editModal.addEventListener('show.bs.modal', function (event) {
    let button = $(event.relatedTarget)
    let id = button.data('id')
    let authorName = button.data('author-name')
    let body = button.data('body')
    
    let modalId = document.getElementById('edit-id')
    let modalAuthorName = document.getElementById('edit-author-name')
    let modalBody = document.getElementById('edit-body')
  
    modalId.value = id
    modalAuthorName.value = authorName
    modalBody.value = body
    })
    
    
    let deleteModal = document.getElementById('deleteModal')
    deleteModal.addEventListener('show.bs.modal', function(event) {
        let button = $(event.relatedTarget)
        let id = button.data('id')
        
        let modalId = document.getElementById('delete-id')    
        
        modalId.value = id
    })
    </script>

</div>