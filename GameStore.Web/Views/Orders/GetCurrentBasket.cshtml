@using GameStore.Web.Helpers
@model GameStore.Web.ViewModels.Order.OrderViewModel

@{
    ViewBag.Title = "Basket";
    Layout = "_Layout";
}

<h2 class="mt-5">Basket</h2>

@if (Model.OrderDetails.Any() == false)
{
    <p>
        You have no items in basket
    </p>
}
else
{
    foreach (var item in Model.OrderDetails)
    {
        <div class="mb-3">
            <div>
                @Html.LabelFor(model => item.Game.Id, "Game Id:", new { @class = "form-label fw-bolder" })
                @Html.DisplayFor(model => item.Game.Id)
            </div>
            <div>
                @Html.LabelFor(model => item.Game.Name, "Game Name:", new { @class = "form-label fw-bolder" })
                @Html.DisplayFor(model => item.Game.Name)
            </div>
            <div>
                @Html.LabelFor(model => item.Quantity, "Quantity:", new { @class = "form-label fw-bolder" })
                @Html.DisplayFor(model => item.Quantity)
            </div>
            <div>
                @Html.ActionLink("Checkout", "GetWithDetails", "Games", new { gameKey = item.Game.Key }, new { @class = "btn btn-secondary" })
            </div>
        </div>
    }

    if ((bool)ViewData[ViewKeys.Orders.HasActiveOrder] == false)
    {
        @Html.ActionLink("Create order", "MakeOrder", "Orders", new { orderId = Model.Id }, new { @class = "btn btn-primary" })
    }
    else
    {
        <a class="btn btn-primary disabled">You're already have an active order</a>
    }
}